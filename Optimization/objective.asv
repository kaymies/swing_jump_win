function f = objective(x,z0,p)
% Inputs:
% x - an array of decision variables.
% z0 - the initial state
% p - simulation parameters
% 
% Outputs:
% f - scalar value of the function (to be minimized) evaluated for the
%     provided values of the decision variables.
%
% Note: fmincon() requires a handle to an objective function that accepts 
% exactly one input, the decision variables 'x', and returns exactly one 
% output, the objective function value 'f'.  It is convenient for this 
% assignment to write an objective function which also accepts z0 and p 
% (because they will be needed to evaluate the objective function).  
% However, fmincon() will only pass in x; z0 and p will have to be
% provided using an anonymous function, just as we use anonymous
% functions with ode45().

  
    ctrl.tf = x(2);  
    ctrl.T = x(3:end);
    [tout, zout, uout, indices] = hybrid_simulation(z0,ctrl,p,[0,x(1)]); % hybrid_simulation(z0,ctrl,p,tspan)  % ------------- CHECK - where get tspan? ------------------------

% Question 5 - Maximize COM height                                    
%     COM_pos = COM_jumping_leg(zout, p);
%     f = -max(COM_pos(2,:));

% Question 6 - minimize t_f
    f = min(x(1));
%       f = min(x(1))
%     T2_func = @(x_d)sum(x_d(2)^2) 
%     f = T2_func(x);                                         % minimize T^2 integral
%       f = 
    % Question 6 - minimize t_f
    f = min(x(1));
end